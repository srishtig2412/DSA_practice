#include <bits/stdc++.h>
using namespace std;
class node {
public:
    int data;
    node* next;
};
node* getIntesection(node* head1, node* head2)
{
    while (head2) {
        node* temp = head1;
        while (temp) {
            if (temp == head2)
                return head2;
            temp = temp->next;
        }
        head2 = head2->next;
    }
    return NULL;
}
void display(node* head){
    node* temp=head;
    while(temp !=NULL){
        cout<<temp->data<<" " <<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}
int main(){
    node* newNode=new node();
    node* head1 = new node();
    head1->data = 10;
 
    node* head2 = new node();
    head2->data = 3;
 
    newNode = new node();
    newNode->data = 6;
    head2->next = newNode;
 
    newNode = new node();
    newNode->data = 9;
    head2->next->next = newNode;
 
    newNode = new node();
    newNode->data = 15;
    head1->next = newNode;
    head2->next->next->next = newNode;
 
    newNode = new node();
    newNode->data = 30;
    head1->next->next = newNode;
 
    head1->next->next->next = NULL;
 
    node* intersectionPoint
        = getIntesection(head1, head2);
 
    if (!intersectionPoint)
        cout << " No Intersection Point"<< endl;
    else{
        cout << "Intersection Point: "<< intersectionPoint->data << endl;
    }
}
