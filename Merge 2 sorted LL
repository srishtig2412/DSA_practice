#include<iostream>
using namespace std;

class node{
    public:
    int data;
    node* next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};
void insertT(node* &head,int data){

    node* n=new node(data);
    if(head==NULL){
        head=n;
        return;
    }
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;

    }
    temp->next=n;
}
void display(node* head){
    node* temp=head;
    while(temp !=NULL){
        cout<<temp->data<<" " <<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}
node* merge(node* &head1,node* &head2) {
    node* p1=head1;
    node* p2=head2;
    node* dummy=new node(-1);
    node* p3=dummy;

    while(p1!=NULL && p2!=NULL){
        if(p1->data<p2->data){
            p3->next=p1;
            p1=p1->next;
        }
        else{
            p3->next=p2;
            p2=p2->next;
        }
        p3=p3->next;
    }
    while(p1!=NULL){
        p3->next=p1;
        p1=p1->next;
        p3=p3->next;
    }
    while(p2!=NULL){
        p3->next=p2;
        p2=p2->next;
        p3=p3->next;
    }
    return dummy->next;


}
int main(){
    node* head1=NULL;
    node* head2=NULL;
    int arr1[]={1,4,8,9};
    int arr2[]={2,3,7};
    for(int i=0;i<4;i++){
        insertT(head1,arr1[i]);
    }
    for(int i=0;i<3;i++){
        insertT(head2,arr2[i]);
    }
    display(head1);
    display(head2);
    node* nhead=merge(head1,head2);
    display(nhead);

}
