#include <bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};
void insertT(node* &head,int data){

    node* n=new node(data);
    if(head==NULL){
        head=n;
        return;
    }
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;

    }
    temp->next=n;
}
void display(node* head){
    node* temp=head;
    while(temp !=NULL){
        cout<<temp->data<<" " <<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}

bool isPalindrome(node* &head){
    node* slow=head;
    stack<int>s;
    while(slow!=NULL){
        s.push(slow->data);
        slow=slow->next;

    }
    while(head!=NULL){
        int i=s.top();
        s.pop();

        if(head->data!=i){
            return;
        }head=head->next;
    }return true;

}

int main(){
    node* head=NULL;
    insertT(head,1);
    insertT(head,2);
    insertT(head,2);
    insertT(head,1);
    display(head);

    int result=isPalindrome(head);
    if (result == 1)
        cout << "Palindrome"<<endl;
    else
        cout << "Not Palindrome"<<endl;
 
    return 0;
    

}
